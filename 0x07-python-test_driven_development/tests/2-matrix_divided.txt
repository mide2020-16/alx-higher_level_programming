# Test regular matrix division
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test division by zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test non-integer/divisor inputs
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], [])
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], {})
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.5)
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test empty matrix
>>> matrix_divided([], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test non-rectangular matrix
>>> matrix_divided([[1, 2, 3], [4, 5], [7, 8, 9]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test matrix with non-integer/float elements
>>> matrix_divided([[1, 2, 'a'], [4, None, 6]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
